USE [RUL-WRS]
GO

IF OBJECT_ID('dbo.SELECCIONAR_EQUIPO_PESADO', 'P') IS NOT NULL
	DROP PROCEDURE dbo.SELECCIONAR_EQUIPO_PESADO
GO

CREATE PROCEDURE dbo.SELECCIONAR_EQUIPO_PESADO
AS 
   SELECT	EQUIPO_PESADO_ID,
			TIPO,
			DESCRIPCION,
			ESTADO,
			REPORTE
	FROM	dbo.EQUIPO_PESADO
	ORDER BY EQUIPO_PESADO_ID
GO

IF OBJECT_ID('dbo.CAMBIAR_ESTADO_EQUIPO_PESADO', 'P') IS NOT NULL
	DROP PROCEDURE dbo.CAMBIAR_ESTADO_EQUIPO_PESADO
GO

CREATE PROCEDURE dbo.CAMBIAR_ESTADO_EQUIPO_PESADO
	@EQUIPO_PESADO_ID AS INT,
	@ESTADO	AS VARCHAR(32)
AS 
	UPDATE dbo.EQUIPO_PESADO
	SET	ESTADO = @ESTADO
	WHERE EQUIPO_PESADO_ID = @EQUIPO_PESADO_ID
GO

IF OBJECT_ID('dbo.SELECCIONAR_REGISTRO_ENTRADA', 'P') IS NOT NULL
	DROP PROCEDURE dbo.SELECCIONAR_REGISTRO_ENTRADA
GO

CREATE PROCEDURE dbo.SELECCIONAR_REGISTRO_ENTRADA
	@EQUIPO_PESADO_ID AS INT
AS 
	SELECT	ID,
			EQUIPO_PESADO_ID,
			FECHA_HORA,
			REGISTRO
	FROM	dbo.REGISTRO_ENTRADA
	WHERE	EQUIPO_PESADO_ID = @EQUIPO_PESADO_ID
GO

IF OBJECT_ID('dbo.CREAR_CICLO', 'P') IS NOT NULL
	DROP PROCEDURE dbo.CREAR_CICLO
GO

CREATE PROCEDURE dbo.CREAR_CICLO
	@EQUIPO_PESADO_ID AS VARCHAR(256),
	@INICIO AS DATETIME,
	@FIN AS DATETIME,
	@ESTADO AS VARCHAR(32)
AS 
	-- Crear nuevo ciclo
	INSERT INTO dbo.CICLO(EQUIPO_PESADO_ID, INICIO, FIN, ESTADO) 
	VALUES(@EQUIPO_PESADO_ID, @INICIO, @FIN, @ESTADO)

	SELECT	CICLO_ID,
			EQUIPO_PESADO_ID,
			INICIO,
			FIN,
			ESTADO
	FROM	CICLO
	WHERE	CICLO_ID = (SELECT MAX(CICLO_ID) FROM dbo.CICLO)
GO

IF OBJECT_ID('dbo.GUARDAR_CARACTERISTICAS', 'P') IS NOT NULL
	DROP PROCEDURE dbo.GUARDAR_CARACTERISTICAS
GO

CREATE PROCEDURE dbo.GUARDAR_CARACTERISTICAS
	@CICLO_ID AS INT,
	@CARACTERISTICAS AS VARCHAR(1024),
	@ETAPA AS VARCHAR(32)
AS 
	DECLARE @ORDEN AS INT
	SELECT @ORDEN = COUNT(*) + 1 FROM dbo.PROCESADO WHERE CICLO_ID = @CICLO_ID

	-- Guardar vector caracteristica
	INSERT INTO dbo.PROCESADO
	(
		CICLO_ID,
		ORDEN,
		CARACTERISTICAS,
		ETAPA
	)
	VALUES
	(
		@CICLO_ID,
		@ORDEN,
		@CARACTERISTICAS,
		@ETAPA
	);
GO

IF OBJECT_ID('dbo.LLENA_REGISTRO_ENTRADA') IS NOT NULL
	DROP TRIGGER dbo.LLENA_REGISTRO_ENTRADA
GO

CREATE TRIGGER dbo.LLENA_REGISTRO_ENTRADA  
ON dbo.IOT_GATEWAY  
AFTER INSERT   
AS  
	DECLARE @EQUIPO_PESADO_ID AS VARCHAR(256)
	DECLARE @FECHA_HORA AS DATETIME
	DECLARE @REGISTRO AS VARCHAR(4096)

	SELECT	@EQUIPO_PESADO_ID = i.ID_MAQUINA,
			@FECHA_HORA = FECHA_HORA,
			@REGISTRO = (
				SELECT	FECHA_HORA,
						ID_MAQUINA,
						TIPO_MAQUINA,
						CARGA_CUCHARON,
						CARGA_ACTUAL_CAMION,
						CARGA_ULTIMO_CAMION,
						TONELADAS_TURNO,
						VOLTAJE_LINEA,
						POTENCIA_KW_MOVIMIENTOS,
						FACTOR_POTENCIA,
						POTENCIA_KW_MAQUINA,
						TEMP_TRANSFORMADOR_1,
						TEMP_TRANSFORMADOR_2,
						VELOCIDAD_HOIST,
						TORQUE_HOIST,
						CORRIENTE_IW_HOIST,
						POTENCIA_KW_HOIST,
						VEL_REF_HOIST,
						TEMP_MOTOR_HOIST,
						EXTENSION_CROWD,
						LONGITUD_CABLE_HOIST,
						ANGULO_SWING
				FROM INSERTED i
				FOR JSON PATH, Without_Array_Wrapper
			)
	FROM	INSERTED i
	
	INSERT INTO DBO.REGISTRO_ENTRADA
	(
		EQUIPO_PESADO_ID,
		FECHA_HORA,
		REGISTRO
	)
	VALUES
	(
		@EQUIPO_PESADO_ID,
		@FECHA_HORA,
		@REGISTRO
	);
GO
