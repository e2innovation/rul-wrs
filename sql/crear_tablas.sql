USE [RUL-WRS]
GO

IF OBJECT_ID('dbo.IOT_GATEWAY') IS NULL
	CREATE TABLE dbo.IOT_GATEWAY
	(
		MESSAGE_ID VARCHAR(16),
		DATE_TIME DATETIME,
		MACHINE_IDENTIFIER VARCHAR(16),
		TYPE_OF_MACHINE VARCHAR(16),
		DIPPER_LOAD INT,
		CURRENT_TRUCK_LOAD INT,
		LAST_TRUCK_LOAD INT,
		SHIFT_TONS BIGINT,
		LINE_VOLTAGE NUMERIC(20,8),
		MOTION_CONTROL_KW SMALLINT,
		POWER_FACTOR SMALLINT,
		MACHINE_KW SMALLINT,
		TRANSFORMER_1_TEMP SMALLINT,
		TRANSFORMER_2_TEMP SMALLINT,
		HOIST_SPEED SMALLINT,
		HOIST_TORQUE SMALLINT,
		HOIST_IW SMALLINT,
		HOIST_KW SMALLINT,
		HOIST_SPEED_REF SMALLINT,
		HOIST_MOTOR_TEMP SMALLINT,
		CROWD_EXTENSION NUMERIC(20,8),
		HOIST_ROPE_LENGTH NUMERIC(20,8),
		SWING_ANGLE SMALLINT,
		IGBT_MODULE_1_TEMP SMALLINT,
		IGBT_MODULE_2_TEMP SMALLINT,
		IGBT_MODULE_3_TEMP SMALLINT,
		IGBT_MODULE_4_TEMP SMALLINT,
		IGBT_MODULE_5_TEMP SMALLINT,
		IGBT_MODULE_6_TEMP SMALLINT,
		IGBT_MODULE_7_TEMP SMALLINT,
		HOIST_DRUM_R_BEAR_TEMP SMALLINT,
		HOIST_DRUM_L_BEAR_TEMP SMALLINT,
		HOIST_UP_IN_PINION_BEAR_TEMP SMALLINT,
		HOIST_LOW_IN_PINION_BEAT_TEMP SMALLINT,
		HOIST_MTR_R_BEAR_TEMP SMALLINT,
		HOIST_MTR_L_BEAR_TEMP SMALLINT,
		HOIST_GEARCASE_OIL_TEMP SMALLINT,
		HOIST_GEARCASE_OIL_PRESSURE SMALLINT,
		CROWD_SPEED SMALLINT,
		CROWD_TORQUE SMALLINT,
		CROWD_IW SMALLINT,
		CROWD_KW SMALLINT,
		CROWD_SPEED_REF SMALLINT,
		CROWD_MOTOR_TEMP SMALLINT,
		IGBT_MODULE_8_TEMP SMALLINT,
		IGBT_MODULE_9_TEMP SMALLINT,
		IGBT_MODULE_10_TEMP SMALLINT,
		IGBT_MODULE_11_TEMP SMALLINT,
		IGBT_MODULE_12_TEMP SMALLINT,
		IGBT_MODULE_13_TEMP SMALLINT,
		IGBT_MODULE_14_TEMP SMALLINT,
		BETA_ANGLE NUMERIC(20,8),
		CROWD_DRUM_R_BEAR_TEMP SMALLINT,
		CROWD_DRUM_L_BEAR_TEMP SMALLINT,
		CROWD_IN_SHAFT_IN_BEAR_TEMP SMALLINT,
		CROWD_IN_SHAFT_OUT_BEAR_TEMP SMALLINT,
		CROWD_1_INTER_SHAFT_IN_BEAR_TEMP SMALLINT,
		CROWD_1_INTER_SHAFT_OUT_BEAR_TEMP SMALLINT,
		CROWD_2_INTER_SHAFT_IN_BEAR_TEMP SMALLINT,
		CROWD_2_INTER_SHAFT_OUT_BEAR_TEMP SMALLINT,
		CROWD_MOTOR_R_BEAR_TEMP SMALLINT,
		CROWD_MOTOR_L_BEAR_TEMP SMALLINT,
		SWING_SPEED SMALLINT,
		SWING_TORQUE SMALLINT,
		SWING_IW SMALLINT,
		SWING_KW SMALLINT,
		SWING_MS_REF SMALLINT,
		SWING_1_MOTOR_TEMP SMALLINT,
		SWING_2_MOTOR_TEMP SMALLINT,
		TOTAL_TILT NUMERIC(20,8),
		FORE_AFT_TILT NUMERIC(20,8),
		SIDE_SIDE_TILT NUMERIC(20,8),
		CYCLE_SWING_ANGLE SMALLINT,
		OUTSIDE_AMBIENT_AIR_TEMPERATURE SMALLINT,
		HOUSE_AMBIENT_AIR_TEMPERATURE SMALLINT,
		SWING_GEARCASE_1_UP_FORE_BEARING_TEMP SMALLINT,
		SWING_GEARCASE_1_LOW_AFT_BEARING_TEMP SMALLINT,
		SWING_MTR_1_UP_BEAR_TEMP SMALLINT,
		SWING_MTR_1_LOW_BEAR_TEMP SMALLINT,
		AIR_PRESSURE SMALLINT,
		LUBE_A1_PRESSURE SMALLINT,
		LUBE_A2_PRESSURE SMALLINT,
		LUBE_B1_PRESSURE SMALLINT,
		LUBE_B2_PRESSURE SMALLINT,
		LUBE_C1_PRESSURE SMALLINT,
		LUBE_C2_PRESSURE SMALLINT,
		SWING_GEARCASE_2_UP_FORE_BEARING_TEMP SMALLINT,
		SWING_GEARCASE_2_LOW_AFT_BEARING_TEMP SMALLINT,
		SWING_MTR_2_UP_BEAR_TEMP SMALLINT,
		SWING_MTR_2_LOW_BEAR_TEMP SMALLINT,
		STATUS_BYTE_1 TINYINT,
		STATUS_BYTE_2 TINYINT,
		STATUS_BYTE_3 TINYINT,
		STATUS_BYTE_4 TINYINT,
		STATUS_BYTE_5 TINYINT,
		STATUS_BYTE_6 TINYINT,
		HC_STATES_BYTE_1 TINYINT,
		HC_STATES_BYTE_2 TINYINT,
		HC_STATES_BYTE_3 TINYINT,
		HC_STATES_BYTE_4 TINYINT,
		MACHINE_OPERATING_HOURS INT,
		OPERATOR_ID VARCHAR(10),
		CYCLE_COUNT INT,
		HOIST_FAULT_COUNT INT,
		CROWD_FAULT_COUNT INT,
		SWING_FAULT_COUNT INT,
		PROPEL_FAULT_COUNT INT,
		BOOM_JACK_FAULT_COUNT INT,
		AFE_FAULT_COUNT INT,
		IDLE_TIME INT,
		PROPEL_TIME INT,
		DIG_TIME INT,
		CYCLE_TIME INT,
		NEW_TRUCK_COUNT INT,
		NEW_TRUCK_TIME INT,
		LUBE_A1_PRESSURE_COUNT INT,
		LUBE_A2_PRESSURE_COUNT INT,
		LUBE_A3_PRESSURE_COUNT INT,
		LUBE_A4_PRESSURE_COUNT INT,
		LUBE_A5_PRESSURE_COUNT INT,
		LUBE_A6_PRESSURE_COUNT INT,
		LUBE_A1_CYCLE_TIME INT,
		LUBE_A2_CYCLE_TIME INT,
		LUBE_A3_CYCLE_TIME INT,
		LUBE_A4_CYCLE_TIME INT,
		LUBE_A5_CYCLE_TIME INT,
		LUBE_A6_CYCLE_TIME INT,
		CROWD_STOP_LIMIT_EXTENSION INT,
		RET_STOP_LIMIT_EXTENSION INT,
		HOIST_STOP_LIMIT_EXTENSION INT,
		LOWER_STOP_LIMIT_EXTENSION INT,
		BOOM_JACK_FAULT_EXTENSION INT,
		SPARE_1 NUMERIC(20,8),
		SPARE_2 NUMERIC(20,8),
		SPARE_3 NUMERIC(20,8),
		SPARE_4 NUMERIC(20,8),
		SPARE_5 NUMERIC(20,8),
		SPARE_6 NUMERIC(20,8),
		SPARE_7 NUMERIC(20,8),
		SPARE_8 NUMERIC(20,8),
		-----------------------------------------------
		HC_ESTIMATED_WARMUP_TIME_REMAINING NUMERIC(20,8),
		COOLER_INLET_TEMPERATURE NUMERIC(20,8),
		COOLER_OUTLET_TEMPERATURE NUMERIC(20,8),
		LUBE_PUMP_GEARCASE_TEMPERATURE NUMERIC(20,8),
		SWING_1_BEARING_5_TEMP NUMERIC(20,8),
		SWING_1_BEARING_6_TEMP NUMERIC(20,8),
		SWING_1_BEARING_7_TEMP NUMERIC(20,8),
		SWING_1_BEARING_8_TEMP NUMERIC(20,8),
		CYLINDER_MANIFOLD_OUTLET_TEMPERATURE NUMERIC(20,8),
		LOWER_HYDRAULIC_OIL_TEMPERATURE NUMERIC(20,8),
		UPPER_HYDRAULIC_OIL_TEMPERATURE NUMERIC(20,8),
		SWING_2_BEARING_5_TEMP NUMERIC(20,8),
		SWING_2_BEARING_6_TEMP NUMERIC(20,8),
		SWING_2_BEARING_7_TEMP NUMERIC(20,8),
		SWING_2_BEARING_8_TEMP NUMERIC(20,8),
		WARMUP_SEQUENCE_1 NUMERIC(20,8),
		WARMUP_SEQUENCE_2 NUMERIC(20,8),
		LUBE_PUMP_GEARCASE_PRESSURE NUMERIC(20,8),
		RETURN_FILTER_SENSOR_PRESSURE NUMERIC(20,8),
		CROWD_PRESSURE_TRANSDUCER_CAP NUMERIC(20,8),
		CROWD_PRESSURE_TRANSDUCER_ROD NUMERIC(20,8),
		CYLINDER_MANIFOLD_OUTLET_PRESSURE NUMERIC(20,8),
		PUMP_MANIFOLD_OUTLET_PRESSURE NUMERIC(20,8),
		CROWD_POSITION_SENSOR_VELOCITY NUMERIC(20,8),
		CROWD_POSITION_SENSOR_POSITION NUMERIC(20,8),
		CROWD_MOTOR_TACOMETER_SPEED NUMERIC(20,8),
		CROWD_MASTER_SWITCH_REFERENCE NUMERIC(20,8),
		CROWD_MOTOR_TORQUE NUMERIC(20,8),
		PLC_PERCENT_REF_TO_DRIVE NUMERIC(20,8),
		PUMP_CASE_DRAIN_MONITOR_1 NUMERIC(20,8),
		PUMP_CASE_DRAIN_MONITOR_2 NUMERIC(20,8),
		PUMP_CASE_DRAIN_MONITOR_3 NUMERIC(20,8),
		PUMP_CASE_DRAIN_MONITOR_4 NUMERIC(20,8)
	);
	
IF OBJECT_ID('dbo.EQUIPO_PESADO') IS NULL
	CREATE TABLE dbo.EQUIPO_PESADO
	(
		EQUIPO_PESADO_ID VARCHAR(256) PRIMARY KEY,
		TIPO VARCHAR(32) NOT NULL,
		DESCRIPCION VARCHAR(1024) NOT NULL,
		ESTADO VARCHAR(32) NOT NULL,
		REPORTE VARCHAR(MAX) NOT NULL
	);

IF OBJECT_ID('dbo.EQUIPO_PESADO') IS NULL
	CREATE TABLE dbo.EQUIPO_PESADO
	(
		EQUIPO_PESADO_ID VARCHAR(256) PRIMARY KEY,
		TIPO VARCHAR(32) NOT NULL,
		DESCRIPCION VARCHAR(1024) NOT NULL,
		ESTADO VARCHAR(32) NOT NULL,
		REPORTE VARCHAR(MAX) NOT NULL
	);

IF OBJECT_ID('dbo.REGISTRO_ENTRADA') IS NULL
	CREATE TABLE dbo.REGISTRO_ENTRADA
	(
		ID BIGINT PRIMARY KEY IDENTITY,
		EQUIPO_PESADO_ID VARCHAR(256) NOT NULL,
		FECHA_HORA DATETIME NOT NULL,
		REGISTRO VARCHAR(4096) NOT NULL 
	);

IF OBJECT_ID('dbo.CICLO') IS NULL
	CREATE TABLE dbo.CICLO
	(
		CICLO_ID BIGINT PRIMARY KEY IDENTITY,
		EQUIPO_PESADO_ID VARCHAR(256) NOT NULL,
		INICIO DATETIME NULL,
		FIN DATETIME NULL,
		ESTADO VARCHAR(32) NOT NULL, 
		FOREIGN KEY(EQUIPO_PESADO_ID) REFERENCES dbo.EQUIPO_PESADO(EQUIPO_PESADO_ID)
	);

IF OBJECT_ID('dbo.PROCESADO') IS NULL
	CREATE TABLE dbo.PROCESADO
	(
		CICLO_ID BIGINT NOT NULL,
		ORDEN INT NOT NULL,
		ETAPA VARCHAR(32) NOT NULL,
		CARACTERISTICAS VARCHAR(1024) NOT NULL,
		CLASE INT NULL,
		PRIMARY KEY(CICLO_ID, ORDEN),
		FOREIGN KEY(CICLO_ID) REFERENCES dbo.CICLO(CICLO_ID)
	)

IF OBJECT_ID('dbo.CICLO_DETALLE') IS NULL
	CREATE TABLE dbo.CICLO_DETALLE
	(
		CICLO_ID bigint NOT NULL,
		ID int NOT NULL,
		REGISTRO varchar(1024) NOT NULL,
		ETAPA varchar(32) NOT NULL,
<<<<<<< HEAD
		PRIMARY KEY(CICLO_ID, ORDEN),
=======
		PRIMARY KEY(CICLO_ID, ID),
>>>>>>> 4f30acdbc6afbe9b80afb7bf07f99ee29d47ee49
		FOREIGN KEY(CICLO_ID) REFERENCES dbo.CICLO(CICLO_ID)
	)

GO